# Generated by Django 2.2 on 2019-05-14 18:55

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('words', '0001_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='word',
            name='ant',
            field=models.ManyToManyField(blank=True, related_name='_word_ant_+', related_query_name='antonym', to='words.Word', verbose_name='antonyms'),
        ),
        migrations.AlterField(
            model_name='word',
            name='bga',
            field=models.ManyToManyField(blank=True, help_text='words that frequently follow this (i.e. wreak followed by havoc', related_name='frequently_follows', to='words.Word', verbose_name='frequent followers'),
        ),
        migrations.AlterField(
            model_name='word',
            name='bgb',
            field=models.ManyToManyField(blank=True, help_text='words that frequently precede this(i.e. havoc preceding wreak', related_name='frequently_precedes', to='words.Word', verbose_name='frequent predecessors'),
        ),
        migrations.AlterField(
            model_name='word',
            name='cns',
            field=models.ManyToManyField(blank=True, help_text='i.e. sample and simple', related_name='_word_cns_+', related_query_name='consonant_match', to='words.Word', verbose_name='consonant matches'),
        ),
        migrations.AlterField(
            model_name='word',
            name='com',
            field=models.ManyToManyField(blank=True, help_text='things which this is composed of(a car has an accelerator, a steering wheel, etc.', related_name='part_of', to='words.Word', verbose_name='comprises'),
        ),
        migrations.AlterField(
            model_name='word',
            name='gen',
            field=models.ManyToManyField(blank=True, help_text='words with a similar, but more specific meaning (i.e. gondola is a hyponym of boat)', related_name='hypernyms', related_query_name='hypernym', to='words.Word', verbose_name='direct hyponyms'),
        ),
        migrations.AlterField(
            model_name='word',
            name='hom',
            field=models.ManyToManyField(blank=True, help_text='sound-alike words', related_name='_word_hom_+', related_query_name='homophone', to='words.Word', verbose_name='homophones'),
        ),
        migrations.AlterField(
            model_name='word',
            name='jja',
            field=models.ManyToManyField(blank=True, related_name='related_by_jja', to='words.Word', verbose_name='popular related noun'),
        ),
        migrations.AlterField(
            model_name='word',
            name='jjb',
            field=models.ManyToManyField(blank=True, related_name='related_by_jjb', to='words.Word', verbose_name='popular related adjective'),
        ),
        migrations.AlterField(
            model_name='word',
            name='nry',
            field=models.ManyToManyField(blank=True, help_text='approximate rhymes', related_name='_word_nry_+', related_query_name='near_rhyme', to='words.Word', verbose_name='near rhymes'),
        ),
        migrations.AlterField(
            model_name='word',
            name='par',
            field=models.ManyToManyField(blank=True, help_text='things of which this is a part of(a window is a part of a car, a house, a boat, etc.)', related_name='comprises', to='words.Word', verbose_name='part of'),
        ),
        migrations.AlterField(
            model_name='word',
            name='rhy',
            field=models.ManyToManyField(blank=True, help_text='perfect rhymes', related_name='_word_rhy_+', related_query_name='rhyme', to='words.Word', verbose_name='rhymes'),
        ),
        migrations.AlterField(
            model_name='word',
            name='spc',
            field=models.ManyToManyField(blank=True, help_text='words with a similar, but broader meaning (i.e. boat is a hypernym of gondola)', related_name='hyponyms', related_query_name='hyponym', to='words.Word', verbose_name='direct hypernyms'),
        ),
        migrations.AlterField(
            model_name='word',
            name='syn',
            field=models.ManyToManyField(blank=True, related_name='_word_syn_+', related_query_name='synonym', to='words.Word', verbose_name='synonym'),
        ),
        migrations.AlterField(
            model_name='word',
            name='trg',
            field=models.ManyToManyField(blank=True, related_name='words_is_trigger_for', related_query_name='is_trigger_for', to='words.Word', verbose_name='triggers'),
        ),
    ]
